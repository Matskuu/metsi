#Application configuration values. Can be overriden by CLI arguments. May be commented out for None or default from Mela2Configuration.
app_configuration:
  state_format: forest_centre #options: fdm, vmi12, vmi13, forest_centre
  state_input_container: csv #Only relevant with fdm state_format. Options: pickle, json
  #preprocessing_output_container: csv #options: pickle, json, csv, null, rsd (special case not usable as input container)
  #state_output_container: csv #options: pickle, json, csv, null
  #derived_data_output_container: pickle #options: pickle, json, null
  formation_strategy: partial
  evaluation_strategy: depth
  run_modes: preprocess,simulate,postprocess,export

run_constraints:
  first_thinning:
    minimum_time_interval: 50
  clearcutting:
    minimum_time_interval: 50

operation_params:
  first_thinning:
    - thinning_factor: 0.97
      e: 0.2
      dominant_height_lower_bound: 11
      dominant_height_upper_bound: 16
  thinning_from_below:
    - thinning_factor: 0.97
      e: 0.2
  thinning_from_above:
    - thinning_factor: 0.98
      e: 0.2
  even_thinning:
    - thinning_factor: 0.9
      e: 0.2
  calculate_biomass:
    - model_set: 1
  report_collectives:
    - identifier: identifier
      area: area
      npv_1_percent: net_present_value.value[(net_present_value.interest_rate==1) & (net_present_value.time_point == 15)]
      npv_2_percent: net_present_value.value[(net_present_value.interest_rate==2) & (net_present_value.time_point == 15)]
      npv_3_percent: net_present_value.value[(net_present_value.interest_rate==3) & (net_present_value.time_point == 15)]
      npv_4_percent: net_present_value.value[(net_present_value.interest_rate==4) & (net_present_value.time_point == 15)]
      npv_5_percent: net_present_value.value[(net_present_value.interest_rate==5) & (net_present_value.time_point == 15)]

      # stock volumes at state years
      stock_0: cross_cutting.volume_per_ha[(cross_cutting.source == "standing") & (cross_cutting.time_point == 0)]
      stock_5: cross_cutting.volume_per_ha[(cross_cutting.source == "standing") & (cross_cutting.time_point == 5)]
      stock_10: cross_cutting.volume_per_ha[(cross_cutting.source == "standing") & (cross_cutting.time_point == 10)]

      # harvest volumes at event years
      harvest_2: cross_cutting.volume_per_ha[(cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_7: cross_cutting.volume_per_ha[(cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]

      # HARVEST VALUES ADAPTING harvest volumes in period (by end year)
      harvest_value_2: cross_cutting.value_per_ha[(cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_value_7: cross_cutting.value_per_ha[(cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]

      # EVENTS * HARVEST VALUES ADAPTING harvest volumes in period (by end year)
      harvest_value_first_2: cross_cutting.value_per_ha[(cross_cutting.operation=="first_thinning") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_value_below_2: cross_cutting.value_per_ha[(cross_cutting.operation=="thinning_from_below") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_value_above_2: cross_cutting.value_per_ha[(cross_cutting.operation=="thinning_from_above") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_value_even_2: cross_cutting.value_per_ha[(cross_cutting.operation=="even_thinning") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]
      harvest_value_clearcut_2: cross_cutting.value_per_ha[(cross_cutting.operation=="clearcutting") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 2)]

      harvest_value_first_7: cross_cutting.value_per_ha[(cross_cutting.operation=="first_thinning") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]
      harvest_value_below_7: cross_cutting.value_per_ha[(cross_cutting.operation=="thinning_from_below") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]
      harvest_value_above_7: cross_cutting.value_per_ha[(cross_cutting.operation=="thinning_from_above") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]
      harvest_value_even_7: cross_cutting.value_per_ha[(cross_cutting.operation=="even_thinning") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]
      harvest_value_clearcut_7: cross_cutting.value_per_ha[(cross_cutting.operation=="clearcutting") & (cross_cutting.source == "harvested") & (cross_cutting.time_point == 7)]

  cross_cut_standing_trees:
    - implementation: fhk # options: py, fhk, lupa
  cross_cut_felled_trees:
    - implementation: fhk # options: py, fhk, lupa

  grow_fhk:
    - package: pymotti_graph
  report_period:
    - overall_volume: cross_cutting.volume_per_ha
  calculate_npv:
    - interest_rates: [1,2,3,4,5] # list of integers, '3' meaning 3%
  collect_standing_tree_properties:
    - properties: [stems_per_ha, species, breast_height_diameter, height, breast_height_age, biological_age, saw_log_volume_reduction_factor]
  collect_felled_tree_properties:
    - properties: [stems_per_ha, species, breast_height_diameter, height]
  planting:
    - tree_count: 10

preprocessing_params:
  generate_reference_trees:
    - n_trees: 10
      method: weibull
      debug: false
  #filter:
  #  - remove trees: sapling or stems_per_ha == 0
  #    remove stands: site_type_category == 0 #not reference_trees

preprocessing_operations:
  - generate_reference_trees # reference trees from strata, replaces existing reference trees
  #- supplement_missing_tree_heights
  #- supplement_missing_tree_ages
  #- generate_sapling_trees_from_sapling_strata
  #- compute_location_metadata # required for using grow_motti, grow_fhk

operation_file_params:
  thinning_from_above:
    thinning_limits: data/parameter_files/Thin.txt
  cross_cut_felled_trees:
    timber_price_table: data/parameter_files/timber_price_table.csv
  cross_cut_standing_trees:
    timber_price_table: data/parameter_files/timber_price_table.csv
  clearcutting:
    clearcutting_limits_ages: data/parameter_files/renewal_ages_southernFI.txt
    clearcutting_limits_diameters: data/parameter_files/renewal_diameters_southernFI.txt
  planting:
    planting_instructions: data/parameter_files/planting_instructions.txt
  calculate_npv:
    land_values: data/parameter_files/land_values_per_site_type_and_interest_rate.json
    renewal_costs: data/parameter_files/renewal_operation_pricing.csv

simulation_events:
  # we describe here objects with schedule for which time points they are active
  - time_points: [0]
    generators:
      - sequence:
          - planting
  - time_points: [0, 5, 10, 15]
    generators:
      - sequence:
          - cross_cut_standing_trees
          - collect_standing_tree_properties
          - calculate_npv
          - calculate_biomass
          - report_state
  - time_points: [2, 7]
    generators:
      - alternatives:
        - do_nothing
        # commented out to reduce the choices for default demo
        - thinning_from_below
        - thinning_from_above
        - first_thinning
        - even_thinning
        - sequence:
          - clearcutting
          - planting
          # operations for renewal after clearcutting go here
      - sequence:
          - cross_cut_felled_trees
          - collect_felled_tree_properties
  - time_points: [5, 10, 15]
    generators:
      - sequence:
          - report_period
  - time_points: [15]
    generators:
      - sequence:
          - report_collectives
  - time_points: [0, 5, 10, 15] # Grow at the end to transition assumed +5 years forwards
    generators:
      - sequence:
        - grow_acta
        #- grow_motti
        # requires fhk dependencies from fhk-requirements.txt
        #- grow_fhk

post_processing:
  operation_params:
    do_nothing:
      - param: value

  post_processing:
    - do_nothing

export:
  - format: J
    cvariables:
      - identifier
      - year
      - site_type_category
      - land_use_category
      - soil_peatland_category
    xvariables:
      - identifier
      - area
      - npv_1_percent
      - npv_2_percent
      - npv_3_percent
      - npv_4_percent
      - npv_5_percent
      # stock volumes at state years
      - stock_0
      - stock_10
      # harvest volumes at event years
      - harvest_2
      - harvest_7
      # harvest VALUES ADAPTING volumes in period (by end year)
      - harvest_value_2
      - harvest_value_7
      - harvest_value_first_2
      - harvest_value_below_2
      - harvest_value_above_2
      - harvest_value_even_2
      - harvest_value_clearcut_2
      - harvest_value_first_7
      - harvest_value_below_7
      - harvest_value_above_7
      - harvest_value_even_7
      - harvest_value_clearcut_7
  - format: rm_schedules_events_timber
    filename: timber_sums.txt
  - format: rm_schedules_events_trees
    filename: trees.txt
