#Application configuration values. Can be overriden by CLI arguments. May be commented out for None or default from Mela2Configuration.
app_configuration:
  state_format: fdm #options: fdm, vmi12, vmi13, forest_centre
  state_input_container: csv #Only relevant with fdm state_format. Options: pickle, json
  #preprocessing_output_container: csv #options: pickle, json, csv, null, rsd (special case not usable as input container)
  #state_output_container: csv #options: pickle, json, csv, null
  #derived_data_output_container: pickle #options: pickle, json, null
  strategy: partial
  run_modes: preprocess,simulate,postprocess,export

run_constraints:
  first_thinning:
    minimum_time_interval: 50
  clearcutting:
    minimum_time_interval: 50

operation_params:
  first_thinning:
    - thinning_factor: 0.97
      e: 0.2
      dominant_height_lower_bound: 11
      dominant_height_upper_bound: 16
  report_biomass:
    - model_set: 1
  report_collectives:
    - Ftot: reference_trees.stems_per_ha
      Fpine: reference_trees.stems_per_ha[reference_trees.species==1]
      Fbirch: reference_trees.stems_per_ha[(reference_trees.species==3)|(reference_trees.species==4)]
  report_state:
    - stock_vol_pine_log: cross_cutting.volume_per_ha[      (cross_cutting.species==1) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "standing")]
      stock_vol_spruce_log: cross_cutting.volume_per_ha[    (cross_cutting.species==2) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "standing")]
      stock_vol_birch_log: cross_cutting.volume_per_ha[     (cross_cutting.species==3) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "standing")]
      stock_vol_pine_pulp: cross_cutting.volume_per_ha[     (cross_cutting.species==1) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "standing")]
      stock_vol_spruce_pulp: cross_cutting.volume_per_ha[   (cross_cutting.species==2) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "standing")]
      stock_vol_birch_pulp: cross_cutting.volume_per_ha[    (cross_cutting.species==3) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "standing")]
      stock_vol_pine_energy: cross_cutting.volume_per_ha[   (cross_cutting.species==1) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "standing")]
      stock_vol_spruce_energy: cross_cutting.volume_per_ha[ (cross_cutting.species==2) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "standing")]
      stock_vol_birch_energy: cross_cutting.volume_per_ha[  (cross_cutting.species==3) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "standing")]
      timber_vol_pine_log: cross_cutting.volume_per_ha[     (cross_cutting.species==1) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "harvested")]
      timber_vol_spruce_log: cross_cutting.volume_per_ha[   (cross_cutting.species==2) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "harvested")]
      timber_vol_birch_log: cross_cutting.volume_per_ha[    (cross_cutting.species==3) & (cross_cutting.timber_grade==1) & (cross_cutting.source == "harvested")]
      timber_vol_pine_pulp: cross_cutting.volume_per_ha[    (cross_cutting.species==1) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "harvested")]
      timber_vol_spruce_pulp: cross_cutting.volume_per_ha[  (cross_cutting.species==2) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "harvested")]
      timber_vol_birch_pulp: cross_cutting.volume_per_ha[   (cross_cutting.species==3) & (cross_cutting.timber_grade==2) & (cross_cutting.source == "harvested")]
      timber_vol_pine_energy: cross_cutting.volume_per_ha[  (cross_cutting.species==1) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "harvested")]
      timber_vol_spruce_energy: cross_cutting.volume_per_ha[(cross_cutting.species==2) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "harvested")]
      timber_vol_birch_energy: cross_cutting.volume_per_ha[ (cross_cutting.species==3) & (cross_cutting.timber_grade==3) & (cross_cutting.source == "harvested")]
  collect_properties:
    - tree: [stems_per_ha, species, breast_height_diameter, height, breast_height_age, biological_age, saw_log_volume_reduction_factor]

preprocessing_params:
  generate_reference_trees:
    - n_trees: 10

preprocessing_operations:
  - generate_reference_trees # reference trees from strata, replaces existing reference trees
  #- compute_location_metadata # required for using grow_motti, grow_fhk

operation_file_params:
  thinning_from_above:
    thinning_limits: data/parameter_files/Thin.txt
  cross_cut_felled_trees:
    timber_price_table: data/parameter_files/timber_price_table.csv
  cross_cut_standing_trees:
    timber_price_table: data/parameter_files/timber_price_table.csv
  clearcutting:
    clearcutting_limits_ages: data/parameter_files/renewal_ages_southernFI.txt
    clearcutting_limits_diameters: data/parameter_files/renewal_diameters_southernFI.txt
    clearcutting_instructions: data/parameter_files/clearcut_instructions.txt
  calculate_npv:
    land_values: data/parameter_files/land_values_per_site_type_and_interest_rate.json
    renewal_costs: data/parameter_files/renewal_operation_pricing.csv

simulation_events:
  # we describe here objects with schedule for which time points they are active
  - time_points: [2020, 2025, 2030]
    generators:
      - sequence:
          - cross_cut_standing_trees
          - report_biomass
          - report_state
          - collect_properties
  - time_points: [2030]
    generators:
      - sequence:
          - cross_cut_standing_trees
      - alternatives:
          - do_nothing
          # commented out to reduce the choices for default demo
          #- thinning_from_below
          #- thinning_from_above
          - first_thinning
          - sequence:
              - clearcutting
              - do_nothing
            # operations for renewal after clearcutting go here
      - sequence:
          - cross_cut_felled_trees
          - report_state
          - report_collectives
          - collect_properties
  - time_points: [2020, 2025] # Grow at the end to transition assumed +5 years forwards
    generators:
      - sequence:
          - grow_acta


post_processing:
  operation_params:
    do_nothing:
      - param: value

  post_processing:
    - do_nothing

export:
  - format: J
    cda_filename: data.cda
    xda_filename: data.xda
    cvariables:
      - year
      - site_type_category
      - land_use_category
      - soil_peatland_category
    xvariables:
      - Ftot
      - Fpine
      - int(site_type_category < 7) * sum(Fbirch)
  - format: rm_schedules_events_timber
    filename: timber_sums.txt
  - format: rm_schedules_events_trees
    filename: trees.txt
